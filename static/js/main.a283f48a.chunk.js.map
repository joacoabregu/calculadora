{"version":3,"sources":["pages/Buttons.js","pages/ButtonsRow.js","state/actionTypes.js","state/action.js","pages/CalcDisplay.js","pages/CalculadoraContainer.js","App.js","reportWebVitals.js","state/reducers.js","index.js"],"names":["Buttons","props","classes","cssClass","className","onClick","onClickFunction","symbol","buttonsRow","buttons","map","btn","index","clickFunction","SET_DISPLAY","RESET_DISPLAY","SET_TOTAL","SET_OPERATOR","RESET","reset","type","connect","state","pushOperator","push","display","resetCallback","useCallback","dispatch","displayNumber","e","payload","setDisplay","currentTarget","childNodes","innerHTML","operators","operator","useEffect","isNaN","alert","array","ButtonsRow","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","total","prevNumb","nextNumb","calculate","firstValue","secondValue","parseFloat","store","createStore","action","newDisplay","newTotal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a283f48a.chunk.js","sourcesContent":["function Buttons(props) {\n    let classes;\n    if(props.cssClass){\n        classes = `button ${props.cssClass}`;\n    }else{\n        classes = 'button'\n    }\n    \n    return(\n        <div className={classes} onClick={props.onClickFunction} >\n            <p >{props.symbol}</p>\n        </div>\n    )\n}\n\nexport default Buttons;","import Buttons from './Buttons';\n\nfunction buttonsRow(props){   \n    return(\n        <div className=\"row\">\n            {props.buttons.map((btn, index) => {\n                return <Buttons symbol={btn.symbol} onClickFunction={btn.clickFunction} cssClass={btn.cssClass} key={index} />\n            })}\n        </div>\n    ) \n}\n\nexport default buttonsRow;","export const SET_DISPLAY = \"SET_DISPLAY\";\nexport const RESET_DISPLAY = \"RESET_DISPLAY\";\nexport const SET_TOTAL = \"SET_TOTAL\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const RESET = \"RESET\";\n","import {\n  SET_DISPLAY,\n  RESET_DISPLAY, \n  SET_TOTAL, \n  //SET_PREV_NUMB, \n  //SET_NEXT_NUMB, \n  SET_OPERATOR,\n  //SET_PUSH,\n  RESET} from './actionTypes';\n\n\nexport function setDisplay(payload) {\n    return {\n      type: SET_DISPLAY,\n      payload\n    }\n}\n\nexport function resetDisplay(payload) {\n  return {\n    type: RESET_DISPLAY,\n    payload\n  }\n}\n\nexport function setTotal(payload) {\n    return {\n      type: SET_TOTAL,\n      payload\n    }\n}\n\n/* export function setPrevNumb(payload) {\n    return {\n      type: SET_PREV_NUMB,\n      payload\n    }\n}\n\nexport function setNextNumb(payload) {\n    return {\n      type: SET_NEXT_NUMB,\n      payload\n    }\n} */\n\nexport function setOperator(payload) {\n    return {\n      type: SET_OPERATOR,\n      payload\n    }\n}\n\n/* export function setPush(payload) {\n    return {\n      type: SET_PUSH,\n      payload\n    }\n} */\n\nexport function reset() {\n  return {\n    type: RESET,\n    \n  }\n}","import { useEffect} from 'react';\nimport { useCallback } from 'react'\nimport { connect } from 'react-redux';\nimport ButtonsRow from './ButtonsRow';\nimport {setDisplay, resetDisplay, setTotal, setOperator,  reset} from '../state/action'\n\nfunction CalcDisplay(props) {\n    const resetCallback = useCallback(() => {\n        props.dispatch(reset());\n      }, [props])\n\n    useEffect(() => {\n        if(isNaN(props.display)){       \n            resetCallback();\n            alert(\"Enter valid number\")       \n        }\n        \n    }, [props.display, resetCallback])\n    \n    \n    function displayNumber(e){\n        if(!props.pushOperator){\n            props.dispatch(resetDisplay(e.currentTarget.childNodes[0].innerHTML));\n        } else {\n            props.dispatch(setDisplay(e.currentTarget.childNodes[0].innerHTML));\n\n        }\n    } \n\n    function operators(e){\n        let operator = e.currentTarget.childNodes[0].innerHTML;\n        props.dispatch(setOperator(operator));                   \n    }\n    \n    function resetAll(){\n        props.dispatch(reset());                                              \n    }\n\n    \n    \n\n    function equal(){\n        props.dispatch(setTotal())           \n    }\n    let buttons = [[\n        {symbol: \"1\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"2\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"3\", clickFunction: displayNumber, cssClass: \"\"},\n    ], [\n        {symbol: \"4\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"5\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"6\", clickFunction: displayNumber, cssClass: \"\"},\n    ], [\n        {symbol: \"7\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"8\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"9\", clickFunction: displayNumber, cssClass: \"\"},\n    ], [\n        {symbol: \"0\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \".\", clickFunction: displayNumber, cssClass: \"\"},\n        {symbol: \"+\", clickFunction: operators, cssClass: \"operators\"},\n    ], [\n        {symbol: \"-\", clickFunction: operators, cssClass: \"operators\"},\n        {symbol: \"*\", clickFunction: operators, cssClass: \"operators\"},\n        {symbol: \"/\", clickFunction: operators, cssClass: \"operators\"},\n    ], [\n        {symbol: \"AC\", clickFunction: resetAll, cssClass: \"alert\"},\n        {symbol: \"=\", clickFunction: equal, cssClass: \"alert\"},\n    ]\n\n]\n    \n    return (\n        <>\n            {buttons.map((array, index)=> <ButtonsRow buttons={array} key={index} /> )}     \n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        pushOperator: state.push,\n        display: state.display\n    }\n}\n\nexport default connect(mapStateToProps)(CalcDisplay);","import CalcDisplay from './CalcDisplay';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Container(props){  \r\n    \r\n    return (\r\n        <section className=\"container\">\r\n            <div className=\"wrapper\">\r\n                <div id=\"display\">\r\n                    {props.display}                 \r\n                </div>\r\n                <CalcDisplay />  \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        display: state.display,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)( Container);","import Container from './pages/CalculadoraContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mi Calculadora</h1>\n      </header>\n      \n      <Container />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport {\n  SET_DISPLAY,\n  RESET_DISPLAY, \n  SET_TOTAL, \n  //SET_PREV_NUMB, \n  //SET_NEXT_NUMB, \n  SET_OPERATOR,\n  //SET_PUSH,\n  RESET\n  } from './actionTypes';\n\n\nlet initialState = {\n  display: \"0\", \n  total: \"0\",\n  prevNumb: \"\", \n  nextNumb: \"\",\n  operator: \"\",\n  push: false\n}\n\nfunction calculate(firstValue, operator, secondValue){\n  switch(operator){\n      case \"+\":\n          return (parseFloat(firstValue) + parseFloat(secondValue));\n      case \"-\":\n          return (parseFloat(firstValue) - parseFloat(secondValue));\n      case \"*\":\n          return (parseFloat(firstValue) * parseFloat(secondValue));    \n      case \"/\":\n          return (parseFloat(firstValue) / parseFloat(secondValue));                \n      default:\n          return (\"0\");    \n\n  }\n}\n\n\nexport default function CalculatorApp(state = initialState, action){\n\n  switch(action.type){\n    case SET_DISPLAY:\n      let newDisplay = state.display + action.payload;\n      return { ...state, display: newDisplay};\n    case RESET_DISPLAY:\n      if(state.nextNumb){\n        return { ...state, display: action.payload, push: true, prevNumb: state.total};\n      }\n      return { ...state, display: action.payload, push: true};\n    case SET_TOTAL:\n      let newTotal = calculate(state.prevNumb, state.operator, state.display)\n      return {...state, display: newTotal, total: newTotal, prevNumb: newTotal, nextNumb: \"\", push: false};\n    /* case SET_PREV_NUMB:\n      let newPrev = state.display\n      return {...state, prevNumb: newPrev};\n    case SET_NEXT_NUMB:\n      let newNext = state.display\n      return {...state, prevNumb: newNext}; */\n    case SET_OPERATOR:\n      if(state.push && state.total !== \"0\"){\n         let newTotal = calculate(state.prevNumb, state.operator, state.display) \n        return {...state, operator: action.payload, prevNumb: newTotal, nextNumb: state.display, total: newTotal, push: false}\n      } \n       if(state.push && state.prevNumb){\n        let newTotal = calculate(state.prevNumb, state.operator, state.display)\n      return {...state, operator: action.payload, push: false, nextNumb: state.display, total: newTotal};\n      } \n      return {...state, operator: action.payload, push: false, prevNumb: state.display};\n    /* case SET_PUSH:\n      return {...state, push: action.payload}; */\n    \n    case RESET:\n      return initialState;\n\n\n    default:\n      return state;\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport CalculatorApp from './state/reducers';\n\nlet store = createStore(CalculatorApp);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}